// Generated by CoffeeScript 1.3.1
(function() {
  var MINING_PER_MINUTE, MINING_RATES, MiningReactor, exp,
    __slice = [].slice;

  MINING_PER_MINUTE = [0, 40, 80, 100];

  MINING_RATES = _(MINING_PER_MINUTE).map(function(e) {
    return e / 60.0;
  });

  MiningReactor = (function() {

    MiningReactor.name = 'MiningReactor';

    function MiningReactor(game_reactor) {
      this.game_reactor = game_reactor;
      this.patches = 8;
      this.last_mined = new Cost(0, 0, 0);
    }

    MiningReactor.prototype.mine = function(workers, resources) {
      var income, max_workers_per_patch, min_workers_per_patch, patches_with_max_workers, patches_with_min_workers, worker_count;
      worker_count = workers.length;
      if (worker_count === 0) {
        return;
      }
      max_workers_per_patch = Math.ceil(worker_count / this.patches);
      min_workers_per_patch = Math.max(0, max_workers_per_patch - 1);
      patches_with_max_workers = worker_count % this.patches;
      if (patches_with_max_workers === 0) {
        patches_with_max_workers = this.patches;
      }
      patches_with_min_workers = this.patches - patches_with_max_workers;
      income = patches_with_max_workers * MINING_RATES[max_workers_per_patch] + patches_with_min_workers * MINING_RATES[min_workers_per_patch];
      this.last_mined.set(income);
      resources.add(this.last_mined);
      return this.log("" + worker_count + " workers [" + patches_with_max_workers + "x" + max_workers_per_patch + " W + " + patches_with_min_workers + "x" + min_workers_per_patch + " W] mined: ", this.last_mined.toString());
    };

    MiningReactor.prototype.log = function() {
      var message;
      message = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
      return console.log.apply(console, ["[MiningReactor] "].concat(__slice.call(message)));
    };

    MiningReactor.prototype.error = function() {
      var message;
      message = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
      return console.error.apply(console, ["[MiningReactor] "].concat(__slice.call(message)));
    };

    return MiningReactor;

  })();

  exp = typeof exports !== "undefined" && exports !== null ? exports : this;

  exp.MiningReactor = MiningReactor;

}).call(this);
