// Generated by CoffeeScript 1.3.1
(function() {
  var Slot, SlotQueue, SlotQueueItem, SlotType, SlotTypes, Slots, k, root, v,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor; child.__super__ = parent.prototype; return child; };

  SlotQueueItem = (function(_super) {

    __extends(SlotQueueItem, _super);

    SlotQueueItem.name = 'SlotQueueItem';

    function SlotQueueItem() {
      return SlotQueueItem.__super__.constructor.apply(this, arguments);
    }

    SlotQueueItem.prototype.defaults = {
      buildable: null,
      starts_at: 0,
      ends_at: 0,
      can_be_built: false
    };

    SlotQueueItem.prototype.initialize = function() {
      return this.set({
        ends_at: this.attributes.starts_at + this.attributes.buildable.time
      });
    };

    SlotQueueItem.prototype.log = function() {
      return "< " + this.attributes.buildable.name + " | " + this.attributes.starts_at + "s-" + this.attributes.ends_at + "s >";
    };

    return SlotQueueItem;

  })(Backbone.Model);

  SlotQueue = (function(_super) {

    __extends(SlotQueue, _super);

    SlotQueue.name = 'SlotQueue';

    function SlotQueue() {
      return SlotQueue.__super__.constructor.apply(this, arguments);
    }

    SlotQueue.prototype.model = SlotQueueItem;

    return SlotQueue;

  })(Backbone.Collection);

  Slot = (function(_super) {

    __extends(Slot, _super);

    Slot.name = 'Slot';

    function Slot() {
      return Slot.__super__.constructor.apply(this, arguments);
    }

    Slot.prototype.defaults = {
      type: null,
      tags: [],
      created_at: 0,
      available_at: 0
    };

    Slot.prototype.initialize = function(attrs) {
      return this.queue = new SlotQueue;
    };

    Slot.prototype.isAvailableAt = function(time) {
      if (this.attributes.available_at > time) {
        return false;
      }
      return true;
    };

    Slot.prototype.getType = function() {
      return SlotTypes.all[this.attributes.type];
    };

    return Slot;

  })(Backbone.Model);

  Slots = (function(_super) {

    __extends(Slots, _super);

    Slots.name = 'Slots';

    function Slots() {
      return Slots.__super__.constructor.apply(this, arguments);
    }

    Slots.prototype.model = Slot;

    return Slots;

  })(Backbone.Collection);

  SlotType = (function() {

    SlotType.name = 'SlotType';

    function SlotType(name, attributes) {
      this.name = name;
      this.attributes = attributes;
      this.allows = this.attributes.allows;
    }

    SlotType.prototype.can_build = function(buildable) {
      return _(this.allows).indexOf(buildable.key) !== -1;
    };

    return SlotType;

  })();

  SlotTypes = (function() {

    SlotTypes.name = 'SlotTypes';

    SlotTypes.all = new SlotTypes;

    function SlotTypes() {
      this.types = {};
    }

    SlotTypes.prototype.add = function(name, attributes) {
      return this.types[name] = new SlotType(name, attributes);
    };

    return SlotTypes;

  })();

  for (k in TERRAN_SLOTS) {
    v = TERRAN_SLOTS[k];
    SlotTypes.all.add(k, v);
  }

  Buildables.add_group('units', TERRAN_UNITS);

  root = typeof exports !== "undefined" && exports !== null ? exports : this;

  root.SlotQueueItem = SlotQueueItem;

  root.SlotQueue = SlotQueue;

  root.Slot = Slot;

  root.Slots = Slots;

}).call(this);
